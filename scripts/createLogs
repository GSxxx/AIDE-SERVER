#!/bin/bash
#:       Title: createLogs - Manages AIDE dumps and logs.
#:    Synopsis: createLogs
#:        Date: 2018-09-10
#:     Version: 0.9
#:      Author: PaweÅ‚ Renc
#:     Options: -h - Print usage information
## Script metadata
scriptname=${0##*/}			# name that script is invoked with
description="Executes AIDE comparison based on databases in spool directory."
usage_information="${scriptname} [-h]"
## File localizations
home_dir="/home/aide/aide"	# path to AIDE files
## Shell additional options
shopt -s extglob 			# turn on extended globbing	
shopt -s nullglob 			# allow globs to return null string
## Function definitions
source "${home_dir}/scripts/info_functions"
## Parse command-line options
while (( $# )); do
	case $1 in
	*) usage ;;
	esac
done
## Check whether there are registered clients.
test -e ${home_dir}/clients/* 2>/dev/null
case $? in
	1)   warrning "No registered clients." ;;
	*)    ;;
esac
## Loop through all registered clients
for client in ${home_dir}/clients/*; do
	client=${client##*/}
	client_logs="${home_dir}/clients/${client}/logs"
	dumps=(${home_dir}/spool/${client}-+([0-9]))
	if (( ${#dumps[@]} >= 2 )); then
		newer=${dumps[-1]}
		newer=${newer##*/}
		older=${dumps[-2]}
		older=${older##*/}
		if [ -f "${client_logs}/${newer}" ]; then
			info "No newer version available for ${client}."
			continue
		else
			info "New version has been found: ${newer}"
		fi
		info "Recent version has been found: ${older}"
		if [ -s "${home_dir}/conf/${client}.conf" ]; then
			sed -r -e "s|^(database=file:).*$|\1${home_dir}/spool/${older}|" -e "s|^(database_new=file:).*$|\1${home_dir}/spool/${newer}|" ${home_dir}/conf/${client}.conf > /tmp/xxx && mv /tmp/xxx ${home_dir}/conf/${client}.conf
		else
			error "Config does not exist or is corrupted." 9
		fi
		std_log=${client_logs}"/"${newer}
		info "Comparing databases. Please wait..."
		/usr/sbin/aide -c ${home_dir}/conf/${client}.conf --compare 1>${std_log}
		aide_status="$?"
		if (( aide_status < 14 )); then
			ok "Output has been saved to proper log file."
			${home_dir}/scripts/nagios.sh ${client} > /dev/null
			nagiosplugin_status="$?"
			if (( nagiosplugin_status == 1 )); then
				${home_dir}/scripts/recovery.sh ${client} ${std_log}
			fi
		else
			if [ ! -s "${std_log}" ]; then
				rm -f "${std_log}"      
			fi
			error "Something went wrong during AIDE comparison." 3
		fi
	else
		warrning "Not enough amount of versions has been provided."
	fi
done
## Maintenance operations
dump_list=()
for client in ${home_dir}/clients/*; do
	client=${client##*/}
	for dump in ${home_dir}/spool/${client}-+([0-9]); do
		dump_list+=("${dump##*/}")
	done
done
check=0
for dump in ${home_dir}/spool/*; do
	if [[ ! "${dump_list[*]}" =~ "${dump##*/}" ]]; then 
		info "Removing unregistered client's dumps and trash files: ${dump}"
		rm -f "${dump}"
		check=1
	fi
done
if [[ ${check} == 0 ]]; then
	ok "No unregistered client's dumps and trash files."
fi
check=0
for client in ${home_dir}/clients/*; do
	clients_dumps=(${home_dir}/spool/${client##*/}-+([0-9]))
	for ((i=0;i<${#clients_dumps[@]}-2;i++)); do
		info "Removing redundant dump: ${clients_dumps[i]}"
		rm -f "${clients_dumps[i]}"
		check=1
	done
done
if [[ ${check} == 0 ]]; then
	ok "No redundant dumps."
fi
if [ "$(crontab -l 2>/dev/null)" == "$(cat cron)" ]; then
	ok "Cron is set up correctly."
else
	if crontab "${home_dir}/scripts/cron"; then
		ok "Cron has been set up."
	else
		warrning "Failed to set up cron."
	fi
fi
